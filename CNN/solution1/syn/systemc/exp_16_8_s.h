// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _exp_16_8_s_HH_
#define _exp_16_8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "exp_16_8_s_f_x_lsfYi.h"
#include "exp_16_8_s_exp_x_g8j.h"
#include "exp_16_8_s_exp_x_hbi.h"

namespace ap_rtl {

struct exp_16_8_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > x_V;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    exp_16_8_s(sc_module_name name);
    SC_HAS_PROCESS(exp_16_8_s);

    ~exp_16_8_s();

    sc_trace_file* mVcdFile;

    exp_16_8_s_f_x_lsfYi* f_x_lsb_table_U;
    exp_16_8_s_exp_x_g8j* exp_x_msb_2_m_1_tabl_U;
    exp_16_8_s_exp_x_hbi* exp_x_msb_1_table_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > f_x_lsb_table_address0;
    sc_signal< sc_logic > f_x_lsb_table_ce0;
    sc_signal< sc_lv<11> > f_x_lsb_table_q0;
    sc_signal< sc_lv<5> > exp_x_msb_2_m_1_tabl_address0;
    sc_signal< sc_logic > exp_x_msb_2_m_1_tabl_ce0;
    sc_signal< sc_lv<25> > exp_x_msb_2_m_1_tabl_q0;
    sc_signal< sc_lv<5> > exp_x_msb_1_table_address0;
    sc_signal< sc_logic > exp_x_msb_1_table_ce0;
    sc_signal< sc_lv<25> > exp_x_msb_1_table_q0;
    sc_signal< sc_lv<1> > tmp_13_fu_171_p3;
    sc_signal< sc_lv<1> > tmp_13_reg_517;
    sc_signal< sc_lv<1> > tmp_13_reg_517_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_13_reg_517_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_13_reg_517_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_13_reg_517_pp0_iter4_reg;
    sc_signal< sc_lv<4> > p_Result_s_reg_523;
    sc_signal< sc_lv<4> > p_Result_s_reg_523_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_18_fu_273_p1;
    sc_signal< sc_lv<2> > tmp_18_reg_528;
    sc_signal< sc_lv<2> > tmp_18_reg_528_pp0_iter1_reg;
    sc_signal< sc_lv<2> > tmp_18_reg_528_pp0_iter2_reg;
    sc_signal< sc_lv<1> > sel_tmp_fu_313_p2;
    sc_signal< sc_lv<1> > sel_tmp_reg_544;
    sc_signal< sc_lv<1> > sel_tmp_reg_544_pp0_iter1_reg;
    sc_signal< sc_lv<1> > sel_tmp_reg_544_pp0_iter2_reg;
    sc_signal< sc_lv<1> > sel_tmp_reg_544_pp0_iter3_reg;
    sc_signal< sc_lv<1> > sel_tmp_reg_544_pp0_iter4_reg;
    sc_signal< sc_lv<11> > f_x_lsb_V_reg_549;
    sc_signal< sc_lv<11> > f_x_lsb_V_reg_549_pp0_iter2_reg;
    sc_signal< sc_lv<25> > p_Val2_8_reg_555;
    sc_signal< sc_lv<25> > p_Val2_8_reg_555_pp0_iter2_reg;
    sc_signal< sc_lv<19> > p_Val2_4_reg_561;
    sc_signal< sc_lv<25> > p_Val2_s_fu_388_p2;
    sc_signal< sc_lv<25> > p_Val2_s_reg_571;
    sc_signal< sc_lv<25> > p_Val2_10_reg_576;
    sc_signal< sc_lv<25> > p_Val2_10_reg_576_pp0_iter4_reg;
    sc_signal< sc_lv<25> > p_Val2_1_reg_582;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > tmp_3_fu_285_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_290_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_356_p1;
    sc_signal< sc_lv<8> > tmp_fu_159_p1;
    sc_signal< sc_lv<1> > tmp_14_fu_179_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_193_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_207_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_221_p3;
    sc_signal< sc_lv<4> > loc_V_fu_149_p4;
    sc_signal< sc_lv<11> > loc_V_1_fu_163_p3;
    sc_signal< sc_lv<1> > tmp_s_fu_235_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_241_p2;
    sc_signal< sc_lv<5> > loc_V_3_fu_277_p3;
    sc_signal< sc_lv<5> > loc_V_2_fu_263_p4;
    sc_signal< sc_lv<1> > not_s_fu_187_p2;
    sc_signal< sc_lv<1> > not_1_fu_201_p2;
    sc_signal< sc_lv<1> > not_3_fu_229_p2;
    sc_signal< sc_lv<1> > or_cond_fu_247_p2;
    sc_signal< sc_lv<1> > tmp4_fu_301_p2;
    sc_signal< sc_lv<1> > not_2_fu_215_p2;
    sc_signal< sc_lv<1> > tmp3_fu_307_p2;
    sc_signal< sc_lv<1> > tmp2_fu_295_p2;
    sc_signal< sc_lv<18> > p_Result_1_fu_325_p4;
    sc_signal< sc_lv<25> > r_V_3_fu_340_p0;
    sc_signal< sc_lv<18> > r_V_3_fu_340_p1;
    sc_signal< sc_lv<43> > r_V_3_fu_340_p2;
    sc_signal< sc_lv<5> > p_Result_s_25_fu_319_p3;
    sc_signal< sc_lv<19> > tmp_8_fu_364_p5;
    sc_signal< sc_lv<20> > tmp_8_cast_fu_374_p1;
    sc_signal< sc_lv<20> > tmp_6_fu_361_p1;
    sc_signal< sc_lv<20> > p_Val2_6_fu_378_p2;
    sc_signal< sc_lv<25> > tmp_9_fu_384_p1;
    sc_signal< sc_lv<25> > r_V_4_fu_399_p0;
    sc_signal< sc_lv<25> > r_V_4_fu_399_p1;
    sc_signal< sc_lv<50> > r_V_4_fu_399_p2;
    sc_signal< sc_lv<1> > not_Result_s_fu_415_p2;
    sc_signal< sc_lv<25> > p_Val2_2_fu_428_p2;
    sc_signal< sc_lv<22> > p_cast_fu_420_p3;
    sc_signal< sc_lv<22> > y_V_fu_432_p4;
    sc_signal< sc_lv<22> > p_Val2_3_fu_442_p3;
    sc_signal< sc_lv<1> > tmp_19_fu_449_p3;
    sc_signal< sc_lv<1> > tmp_20_fu_457_p3;
    sc_signal< sc_lv<1> > tmp_21_fu_465_p3;
    sc_signal< sc_lv<1> > tmp_22_fu_473_p3;
    sc_signal< sc_lv<1> > tmp6_fu_487_p2;
    sc_signal< sc_lv<1> > tmp5_fu_481_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_493_p2;
    sc_signal< sc_lv<16> > tmp_1_fu_499_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to4;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<43> > r_V_3_fu_340_p00;
    sc_signal< sc_lv<43> > r_V_3_fu_340_p10;
    sc_signal< sc_lv<50> > r_V_4_fu_399_p00;
    sc_signal< sc_lv<50> > r_V_4_fu_399_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<22> ap_const_lv22_3FFFFF;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<16> ap_const_lv16_7FFF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to4();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_exp_x_msb_1_table_address0();
    void thread_exp_x_msb_1_table_ce0();
    void thread_exp_x_msb_2_m_1_tabl_address0();
    void thread_exp_x_msb_2_m_1_tabl_ce0();
    void thread_f_x_lsb_table_address0();
    void thread_f_x_lsb_table_ce0();
    void thread_loc_V_1_fu_163_p3();
    void thread_loc_V_2_fu_263_p4();
    void thread_loc_V_3_fu_277_p3();
    void thread_loc_V_fu_149_p4();
    void thread_not_1_fu_201_p2();
    void thread_not_2_fu_215_p2();
    void thread_not_3_fu_229_p2();
    void thread_not_Result_s_fu_415_p2();
    void thread_not_s_fu_187_p2();
    void thread_or_cond_fu_247_p2();
    void thread_p_Result_1_fu_325_p4();
    void thread_p_Result_s_25_fu_319_p3();
    void thread_p_Val2_2_fu_428_p2();
    void thread_p_Val2_3_fu_442_p3();
    void thread_p_Val2_6_fu_378_p2();
    void thread_p_Val2_s_fu_388_p2();
    void thread_p_cast_fu_420_p3();
    void thread_r_V_3_fu_340_p0();
    void thread_r_V_3_fu_340_p00();
    void thread_r_V_3_fu_340_p1();
    void thread_r_V_3_fu_340_p10();
    void thread_r_V_3_fu_340_p2();
    void thread_r_V_4_fu_399_p0();
    void thread_r_V_4_fu_399_p00();
    void thread_r_V_4_fu_399_p1();
    void thread_r_V_4_fu_399_p10();
    void thread_r_V_4_fu_399_p2();
    void thread_sel_tmp_fu_313_p2();
    void thread_tmp2_fu_295_p2();
    void thread_tmp3_fu_307_p2();
    void thread_tmp4_fu_301_p2();
    void thread_tmp5_fu_481_p2();
    void thread_tmp6_fu_487_p2();
    void thread_tmp_13_fu_171_p3();
    void thread_tmp_14_fu_179_p3();
    void thread_tmp_15_fu_193_p3();
    void thread_tmp_16_fu_207_p3();
    void thread_tmp_17_fu_221_p3();
    void thread_tmp_18_fu_273_p1();
    void thread_tmp_19_fu_449_p3();
    void thread_tmp_1_fu_499_p4();
    void thread_tmp_20_fu_457_p3();
    void thread_tmp_21_fu_465_p3();
    void thread_tmp_22_fu_473_p3();
    void thread_tmp_2_fu_241_p2();
    void thread_tmp_3_fu_285_p1();
    void thread_tmp_4_fu_290_p1();
    void thread_tmp_5_fu_493_p2();
    void thread_tmp_6_fu_361_p1();
    void thread_tmp_7_fu_356_p1();
    void thread_tmp_8_cast_fu_374_p1();
    void thread_tmp_8_fu_364_p5();
    void thread_tmp_9_fu_384_p1();
    void thread_tmp_fu_159_p1();
    void thread_tmp_s_fu_235_p2();
    void thread_y_V_fu_432_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
