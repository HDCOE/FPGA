// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_16_8_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] x_V;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] f_x_lsb_table_address0;
reg    f_x_lsb_table_ce0;
wire   [10:0] f_x_lsb_table_q0;
wire   [4:0] exp_x_msb_2_m_1_tabl_address0;
reg    exp_x_msb_2_m_1_tabl_ce0;
wire   [24:0] exp_x_msb_2_m_1_tabl_q0;
wire   [4:0] exp_x_msb_1_table_address0;
reg    exp_x_msb_1_table_ce0;
wire   [24:0] exp_x_msb_1_table_q0;
wire   [0:0] tmp_13_fu_171_p3;
reg   [0:0] tmp_13_reg_517;
reg   [0:0] tmp_13_reg_517_pp0_iter1_reg;
reg   [0:0] tmp_13_reg_517_pp0_iter2_reg;
reg   [0:0] tmp_13_reg_517_pp0_iter3_reg;
reg   [0:0] tmp_13_reg_517_pp0_iter4_reg;
reg   [3:0] p_Result_s_reg_523;
reg   [3:0] p_Result_s_reg_523_pp0_iter1_reg;
wire   [1:0] tmp_18_fu_273_p1;
reg   [1:0] tmp_18_reg_528;
reg   [1:0] tmp_18_reg_528_pp0_iter1_reg;
reg   [1:0] tmp_18_reg_528_pp0_iter2_reg;
wire   [0:0] sel_tmp_fu_313_p2;
reg   [0:0] sel_tmp_reg_544;
reg   [0:0] sel_tmp_reg_544_pp0_iter1_reg;
reg   [0:0] sel_tmp_reg_544_pp0_iter2_reg;
reg   [0:0] sel_tmp_reg_544_pp0_iter3_reg;
reg   [0:0] sel_tmp_reg_544_pp0_iter4_reg;
reg   [10:0] f_x_lsb_V_reg_549;
reg   [10:0] f_x_lsb_V_reg_549_pp0_iter2_reg;
reg   [24:0] p_Val2_8_reg_555;
reg   [24:0] p_Val2_8_reg_555_pp0_iter2_reg;
reg   [18:0] p_Val2_4_reg_561;
wire   [24:0] p_Val2_s_fu_388_p2;
reg   [24:0] p_Val2_s_reg_571;
reg   [24:0] p_Val2_10_reg_576;
reg   [24:0] p_Val2_10_reg_576_pp0_iter4_reg;
reg   [24:0] p_Val2_1_reg_582;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_3_fu_285_p1;
wire   [63:0] tmp_4_fu_290_p1;
wire   [63:0] tmp_7_fu_356_p1;
wire   [7:0] tmp_fu_159_p1;
wire   [0:0] tmp_14_fu_179_p3;
wire   [0:0] tmp_15_fu_193_p3;
wire   [0:0] tmp_16_fu_207_p3;
wire   [0:0] tmp_17_fu_221_p3;
wire   [3:0] loc_V_fu_149_p4;
wire   [10:0] loc_V_1_fu_163_p3;
wire   [0:0] tmp_s_fu_235_p2;
wire   [0:0] tmp_2_fu_241_p2;
wire   [4:0] loc_V_3_fu_277_p3;
wire   [4:0] loc_V_2_fu_263_p4;
wire   [0:0] not_s_fu_187_p2;
wire   [0:0] not_1_fu_201_p2;
wire   [0:0] not_3_fu_229_p2;
wire   [0:0] or_cond_fu_247_p2;
wire   [0:0] tmp4_fu_301_p2;
wire   [0:0] not_2_fu_215_p2;
wire   [0:0] tmp3_fu_307_p2;
wire   [0:0] tmp2_fu_295_p2;
wire   [17:0] p_Result_1_fu_325_p4;
wire   [24:0] r_V_3_fu_340_p0;
wire   [17:0] r_V_3_fu_340_p1;
wire   [42:0] r_V_3_fu_340_p2;
wire   [4:0] p_Result_s_25_fu_319_p3;
wire   [18:0] tmp_8_fu_364_p5;
wire   [19:0] tmp_8_cast_fu_374_p1;
wire   [19:0] tmp_6_fu_361_p1;
wire   [19:0] p_Val2_6_fu_378_p2;
wire   [24:0] tmp_9_fu_384_p1;
wire   [24:0] r_V_4_fu_399_p0;
wire   [24:0] r_V_4_fu_399_p1;
wire   [49:0] r_V_4_fu_399_p2;
wire   [0:0] not_Result_s_fu_415_p2;
wire   [24:0] p_Val2_2_fu_428_p2;
wire   [21:0] p_cast_fu_420_p3;
wire   [21:0] y_V_fu_432_p4;
wire   [21:0] p_Val2_3_fu_442_p3;
wire   [0:0] tmp_19_fu_449_p3;
wire   [0:0] tmp_20_fu_457_p3;
wire   [0:0] tmp_21_fu_465_p3;
wire   [0:0] tmp_22_fu_473_p3;
wire   [0:0] tmp6_fu_487_p2;
wire   [0:0] tmp5_fu_481_p2;
wire   [0:0] tmp_5_fu_493_p2;
wire   [15:0] tmp_1_fu_499_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [42:0] r_V_3_fu_340_p00;
wire   [42:0] r_V_3_fu_340_p10;
wire   [49:0] r_V_4_fu_399_p00;
wire   [49:0] r_V_4_fu_399_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

exp_16_8_s_f_x_lsfYi #(
    .DataWidth( 11 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_lsb_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_lsb_table_address0),
    .ce0(f_x_lsb_table_ce0),
    .q0(f_x_lsb_table_q0)
);

exp_16_8_s_exp_x_g8j #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_2_m_1_tabl_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_2_m_1_tabl_address0),
    .ce0(exp_x_msb_2_m_1_tabl_ce0),
    .q0(exp_x_msb_2_m_1_tabl_q0)
);

exp_16_8_s_exp_x_hbi #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_1_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_address0),
    .ce0(exp_x_msb_1_table_ce0),
    .q0(exp_x_msb_1_table_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_lsb_V_reg_549 <= f_x_lsb_table_q0;
        p_Result_s_reg_523 <= {{x_V[10:7]}};
        p_Result_s_reg_523_pp0_iter1_reg <= p_Result_s_reg_523;
        p_Val2_8_reg_555 <= exp_x_msb_2_m_1_tabl_q0;
        sel_tmp_reg_544 <= sel_tmp_fu_313_p2;
        sel_tmp_reg_544_pp0_iter1_reg <= sel_tmp_reg_544;
        tmp_13_reg_517 <= x_V[32'd15];
        tmp_13_reg_517_pp0_iter1_reg <= tmp_13_reg_517;
        tmp_18_reg_528 <= tmp_18_fu_273_p1;
        tmp_18_reg_528_pp0_iter1_reg <= tmp_18_reg_528;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_lsb_V_reg_549_pp0_iter2_reg <= f_x_lsb_V_reg_549;
        p_Val2_10_reg_576_pp0_iter4_reg <= p_Val2_10_reg_576;
        p_Val2_8_reg_555_pp0_iter2_reg <= p_Val2_8_reg_555;
        sel_tmp_reg_544_pp0_iter2_reg <= sel_tmp_reg_544_pp0_iter1_reg;
        sel_tmp_reg_544_pp0_iter3_reg <= sel_tmp_reg_544_pp0_iter2_reg;
        sel_tmp_reg_544_pp0_iter4_reg <= sel_tmp_reg_544_pp0_iter3_reg;
        tmp_13_reg_517_pp0_iter2_reg <= tmp_13_reg_517_pp0_iter1_reg;
        tmp_13_reg_517_pp0_iter3_reg <= tmp_13_reg_517_pp0_iter2_reg;
        tmp_13_reg_517_pp0_iter4_reg <= tmp_13_reg_517_pp0_iter3_reg;
        tmp_18_reg_528_pp0_iter2_reg <= tmp_18_reg_528_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (sel_tmp_reg_544_pp0_iter2_reg == 1'd0))) begin
        p_Val2_10_reg_576 <= exp_x_msb_1_table_q0;
        p_Val2_s_reg_571 <= p_Val2_s_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (sel_tmp_reg_544_pp0_iter3_reg == 1'd0))) begin
        p_Val2_1_reg_582 <= {{r_V_4_fu_399_p2[49:25]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (sel_tmp_reg_544_pp0_iter1_reg == 1'd0))) begin
        p_Val2_4_reg_561 <= {{r_V_3_fu_340_p2[42:24]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_x_msb_1_table_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_2_m_1_tabl_ce0 = 1'b1;
    end else begin
        exp_x_msb_2_m_1_tabl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_lsb_table_ce0 = 1'b1;
    end else begin
        f_x_lsb_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_5_fu_493_p2[0:0] === 1'b1) ? 16'd32767 : tmp_1_fu_499_p4);

assign exp_x_msb_1_table_address0 = tmp_7_fu_356_p1;

assign exp_x_msb_2_m_1_tabl_address0 = tmp_4_fu_290_p1;

assign f_x_lsb_table_address0 = tmp_3_fu_285_p1;

assign loc_V_1_fu_163_p3 = {{tmp_fu_159_p1}, {3'd0}};

assign loc_V_2_fu_263_p4 = {{x_V[6:2]}};

assign loc_V_3_fu_277_p3 = {{tmp_18_fu_273_p1}, {3'd0}};

assign loc_V_fu_149_p4 = {{x_V[11:8]}};

assign not_1_fu_201_p2 = (tmp_15_fu_193_p3 ^ tmp_13_fu_171_p3);

assign not_2_fu_215_p2 = (tmp_16_fu_207_p3 ^ tmp_13_fu_171_p3);

assign not_3_fu_229_p2 = (tmp_17_fu_221_p3 ^ tmp_13_fu_171_p3);

assign not_Result_s_fu_415_p2 = (tmp_13_reg_517_pp0_iter4_reg ^ 1'd1);

assign not_s_fu_187_p2 = (tmp_14_fu_179_p3 ^ tmp_13_fu_171_p3);

assign or_cond_fu_247_p2 = (tmp_s_fu_235_p2 & tmp_2_fu_241_p2);

assign p_Result_1_fu_325_p4 = {{{tmp_18_reg_528_pp0_iter1_reg}, {5'd0}}, {f_x_lsb_V_reg_549}};

assign p_Result_s_25_fu_319_p3 = {{tmp_13_reg_517_pp0_iter1_reg}, {p_Result_s_reg_523_pp0_iter1_reg}};

assign p_Val2_2_fu_428_p2 = (p_Val2_10_reg_576_pp0_iter4_reg + p_Val2_1_reg_582);

assign p_Val2_3_fu_442_p3 = ((sel_tmp_reg_544_pp0_iter4_reg[0:0] === 1'b1) ? p_cast_fu_420_p3 : y_V_fu_432_p4);

assign p_Val2_6_fu_378_p2 = (tmp_8_cast_fu_374_p1 + tmp_6_fu_361_p1);

assign p_Val2_s_fu_388_p2 = (p_Val2_8_reg_555_pp0_iter2_reg + tmp_9_fu_384_p1);

assign p_cast_fu_420_p3 = ((not_Result_s_fu_415_p2[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign r_V_3_fu_340_p0 = r_V_3_fu_340_p00;

assign r_V_3_fu_340_p00 = p_Val2_8_reg_555;

assign r_V_3_fu_340_p1 = r_V_3_fu_340_p10;

assign r_V_3_fu_340_p10 = p_Result_1_fu_325_p4;

assign r_V_3_fu_340_p2 = (r_V_3_fu_340_p0 * r_V_3_fu_340_p1);

assign r_V_4_fu_399_p0 = r_V_4_fu_399_p00;

assign r_V_4_fu_399_p00 = p_Val2_10_reg_576;

assign r_V_4_fu_399_p1 = r_V_4_fu_399_p10;

assign r_V_4_fu_399_p10 = p_Val2_s_reg_571;

assign r_V_4_fu_399_p2 = (r_V_4_fu_399_p0 * r_V_4_fu_399_p1);

assign sel_tmp_fu_313_p2 = (tmp3_fu_307_p2 | tmp2_fu_295_p2);

assign tmp2_fu_295_p2 = (not_s_fu_187_p2 | not_1_fu_201_p2);

assign tmp3_fu_307_p2 = (tmp4_fu_301_p2 | not_2_fu_215_p2);

assign tmp4_fu_301_p2 = (or_cond_fu_247_p2 | not_3_fu_229_p2);

assign tmp5_fu_481_p2 = (tmp_20_fu_457_p3 | tmp_19_fu_449_p3);

assign tmp6_fu_487_p2 = (tmp_22_fu_473_p3 | tmp_21_fu_465_p3);

assign tmp_13_fu_171_p3 = x_V[32'd15];

assign tmp_14_fu_179_p3 = x_V[32'd11];

assign tmp_15_fu_193_p3 = x_V[32'd12];

assign tmp_16_fu_207_p3 = x_V[32'd13];

assign tmp_17_fu_221_p3 = x_V[32'd14];

assign tmp_18_fu_273_p1 = x_V[1:0];

assign tmp_19_fu_449_p3 = p_Val2_3_fu_442_p3[32'd21];

assign tmp_1_fu_499_p4 = {{p_Val2_3_fu_442_p3[18:3]}};

assign tmp_20_fu_457_p3 = p_Val2_3_fu_442_p3[32'd20];

assign tmp_21_fu_465_p3 = p_Val2_3_fu_442_p3[32'd19];

assign tmp_22_fu_473_p3 = p_Val2_3_fu_442_p3[32'd18];

assign tmp_2_fu_241_p2 = ((loc_V_1_fu_163_p3 > 11'd1280) ? 1'b1 : 1'b0);

assign tmp_3_fu_285_p1 = loc_V_3_fu_277_p3;

assign tmp_4_fu_290_p1 = loc_V_2_fu_263_p4;

assign tmp_5_fu_493_p2 = (tmp6_fu_487_p2 | tmp5_fu_481_p2);

assign tmp_6_fu_361_p1 = p_Val2_4_reg_561;

assign tmp_7_fu_356_p1 = p_Result_s_25_fu_319_p3;

assign tmp_8_cast_fu_374_p1 = tmp_8_fu_364_p5;

assign tmp_8_fu_364_p5 = {{{{tmp_18_reg_528_pp0_iter2_reg}, {5'd0}}, {f_x_lsb_V_reg_549_pp0_iter2_reg}}, {1'd0}};

assign tmp_9_fu_384_p1 = p_Val2_6_fu_378_p2;

assign tmp_fu_159_p1 = x_V[7:0];

assign tmp_s_fu_235_p2 = ((loc_V_fu_149_p4 == 4'd7) ? 1'b1 : 1'b0);

assign y_V_fu_432_p4 = {{p_Val2_2_fu_428_p2[24:3]}};

endmodule //exp_16_8_s
